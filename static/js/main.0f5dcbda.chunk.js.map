{"version":3,"sources":["Images/picture.png","Images/project.png","Components/ContactForm.js","Pages/Home.js","Components/Description.js","Components/Tags.js","Components/TimePeriod.js","Components/JumboListing.js","Pages/Education.js","Pages/Experience.js","Components/ExternalButton.js","Components/CardListing.js","Pages/Projects.js","API.js","App.js","index.js"],"names":["module","exports","ContactForm","Row","Col","sm","md","Button","style","float","variant","type","recaptchaRef","React","createRef","Jumbotron","action","method","onSubmit","current","execute","FormControl","name","className","required","as","rows","options","label","value","ref","size","sitekey","this","renderSubmitButton","Component","Home","props","submitted","messagesEnd","scrollIntoView","behavior","map","url","index","xs","key","target","rel","Container","Image","src","ProfilePicture","roundedCircle","fluid","color","renderSocialIcons","message","email","rating","display","flexDirection","alignItems","Provider","padding","textAlign","parsed","require","parse","location","search","renderAboutMe","submit","renderFormSubmitted","clear","el","Description","description","item","Tags","tags","sort","tag1","tag2","toLowerCase","localeCompare","tag","href","renderTags","TimePeriod","startTime","endTime","JumboListing","title","gallery","Education","education","course","sourceCodeUrl","rounded","renderRelevantCoursework","Experience","experiences","experience","renderExperiences","ExternalButton","text","onClick","window","open","CardListing","Card","bg","galleryUrl","Img","Body","Title","Text","Footer","Projects","decks","children","projects","project","push","ProjectPicture","CardDeck","margin","renderProjects","API","firstname","lastname","data","dataObjects","i","length","id","split","projectType","getSortByDate","comparisonArray","obj1","obj2","date1","date2","indexOf","sheet","completion","Tabletop","init","simpleSheet","callback","tabletop","getDataAsObjects","sheets","elements","App","state","api","get","console","log","setState","Navbar","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","to","Link","Form","inline","styles","container","provided","width","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f5dcbda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.eefe5cb5.png\";","module.exports = __webpack_public_path__ + \"static/media/project.fbd3ef16.png\";","import React, { Component } from \"react\";\nimport { Jumbotron, FormControl, Button, Row, Col } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport { ReCAPTCHA } from \"react-google-recaptcha\";\n\nclass ContactForm extends Component {\n  //   constructor(props) {\n  //     super(props);\n  //   }\n\n  renderSubmitButton() {\n    return (\n      <Row>\n        <Col sm md=\"auto\">\n          <Button style={{ float: \"right\" }} variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n\n  render() {\n    const recaptchaRef = React.createRef();\n    return (\n      <Jumbotron>\n        <form\n          action=\"https://www.form-data.com/_functions/submit/xd8igvkwkekuhax1d5g3ee\"\n          method=\"post\"\n          onSubmit={() => {\n            recaptchaRef.current.execute();\n          }}\n        >\n          {/* Name */}\n          <label>Full Name*</label>\n          <FormControl\n            type=\"textarea\"\n            name=\"name\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Message */}\n          <label>Message*</label>\n          <FormControl\n            as=\"textarea\"\n            rows=\"3\"\n            name=\"message\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Email */}\n          <label>Email*</label>\n          <FormControl\n            type=\"textarea\"\n            name=\"email\"\n            className=\"mr-sm-2\"\n            required\n          />\n          {/* Rating*/}\n          <label>Rate the site?</label>\n          <Select\n            options={[\n              {\n                label: \"1 - Needs improvement\",\n                value: \"1 - Needs improvement\"\n              },\n              { label: \"2 - No comment\", value: \"2 - No comment\" },\n              { label: \"3 - Good to go\", value: \"3 - Good to go\" }\n            ]}\n            name=\"rating\"\n          />\n          <ReCAPTCHA\n            ref={recaptchaRef}\n            size=\"invisible\"\n            sitekey=\"6LceZLwUAAAAAAc9Uob7Qa6dl0U4Ob1DAj3OXaC2\"\n          />\n          <br />\n          {/* Social icons and Submit Button */}\n          {this.renderSubmitButton()}\n        </form>\n      </Jumbotron>\n    );\n  }\n}\nexport default ContactForm;\n","//import liraries\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Image, Jumbotron } from \"react-bootstrap\";\nimport { FaArrowDown, FaCheckCircle, FaStar } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport ContactForm from \"../Components/ContactForm\";\nimport ProfilePicture from \"../Images/picture.png\";\nimport { SocialIcon } from \"react-social-icons\";\n\n// create a component\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.submitted = false;\n  }\n\n  componentDidUpdate() {\n    if (this.submitted) {\n      this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }\n\n  renderSocialIcons() {\n    const socialMediaUrls = [\n      \"https://www.linkedin.com/in/rupal-totale-098360141/\",\n      \"https://github.com/rupaltotale\",\n      \"mailto:rupaltotale@gmail.com\"\n    ];\n    return (\n      <Row className=\"justify-content-center\">\n        {socialMediaUrls.map((url, index) => {\n          return (\n            <Col xs md={2} key={`social-media-${index}`}>\n              <SocialIcon url={url} target=\"_blank\" rel=\"noopener noreferrer\" />\n            </Col>\n          );\n        })}\n        {/* <Col xs md={\"auto\"}>\n          <ExternalButton\n            text=\"Resume\"\n            url=\"https://drive.google.com/file/d/1vMm9cj3EDBEbwMzjvXXTM0f8K09bDTVb/view?usp=sharing\"\n            variant=\"secondary\"\n          ></ExternalButton>\n        </Col> */}\n      </Row>\n    );\n  }\n\n  renderAboutMe() {\n    return (\n      <div>\n        <h2>About Me</h2>\n        <Jumbotron className=\"jumbo-aboutme\">\n          <Container>\n            <Row>\n              <Col xs={12} md={3}>\n                <Image src={ProfilePicture} roundedCircle fluid />\n              </Col>\n              <Col xs={12} md={9}>\n                <h5>Hi, I am Rupal.</h5>\n                <p>\n                  {`I am a computer science student at Cal Poly presently. \n                  I have dabbled with web and app development in the past through hackathons, internships, and personal projects.\n                  I would like to explore these areas further by working on interesting and meaningful coding projects in the future.`}\n                </p>\n                <p>\n                  {`Besides coding, I deeply enjoy teaching, reading, and star gazing.`}{\" \"}\n                  <FaStar color=\"#D5D5CF\"></FaStar>\n                  <FaStar color=\"#E5E5E2\" size={10}></FaStar>\n                  <FaStar color=\"#F0F0EC\" size={5}></FaStar>\n                </p>\n                <p>\n                  {`Feel free to explore the projects I have worked on, the\n                  classes I have taken, and the places I have worked at over the\n                  last two years on this website. If you would like to connect with me, don't hesitate to shoot me a quick message (contact details`}{\" \"}\n                  <FaArrowDown />\n                  {`)!`}\n                </p>\n              </Col>\n            </Row>\n            <hr></hr>\n            {this.renderSocialIcons()}\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n\n  renderFormSubmitted(name, message, email, rating) {\n    this.submitted = true;\n    return (\n      <Jumbotron\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        <h3>Form submitted successfully</h3>\n        <IconContext.Provider\n          value={{ color: \"green\", className: \"global-class-name\" }}\n        >\n          <div style={{ padding: 10 }}>\n            <FaCheckCircle size={100} />\n          </div>\n        </IconContext.Provider>\n        <hr />\n        <h6 style={{ textAlign: \"center\" }}>\n          Thank you for reaching out. I will get back to you through the\n          provided email with a custom response in around 5 business days. Here\n          is what was submitted:\n        </h6>\n        <br />\n        <p>\n          <b>Name: </b> {name}\n        </p>\n        <p>\n          <b>Message: </b> {message}\n        </p>\n        <p>\n          <b>Email: </b> {email}\n        </p>\n        <p>\n          <b>Rating: </b> {rating ? rating : \"Not any\"}\n        </p>\n      </Jumbotron>\n    );\n  }\n\n  render() {\n    const queryString = require(\"query-string\");\n    const parsed = queryString.parse(this.props.location.search);\n    return (\n      <div className=\"container\">\n        {this.renderAboutMe()}\n\n        <h2>Contact Me</h2>\n        {parsed.submit ? (\n          this.renderFormSubmitted(\n            parsed[\"?name\"],\n            parsed.message,\n            parsed.email,\n            parsed.rating\n          )\n        ) : (\n          <ContactForm />\n        )}\n        <div\n          style={{ float: \"left\", clear: \"both\" }}\n          ref={el => {\n            this.messagesEnd = el;\n          }}\n        ></div>\n      </div>\n    );\n  }\n}\n\n//make this component available to the app\nexport default Home;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaCheck } from \"react-icons/fa\";\n\nclass Description extends Component {\n  render() {\n    return this.props.description.map((item, index) => {\n      return (\n        <p key={\"description-\" + index}>\n          <FaCheck /> <span>{item}</span>\n        </p>\n      );\n    });\n  }\n}\n\nDescription.propTypes = {\n  description: PropTypes.arrayOf(String)\n};\n\nexport default Description;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Tags extends Component {\n  renderTags() {\n    const sortedTags = this.props.tags.sort(function(tag1, tag2) {\n      return tag1.toLowerCase().localeCompare(tag2.toLowerCase());\n    });\n    return sortedTags.map((tag, index) => {\n      return (\n        <span key={\"tag-\" + index}>\n          {index ? \", \" : \"\"}\n          <a href=\"/\">{tag}</a>\n        </span>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <p>\n        <span>{\"Tags: \"}</span>\n        {this.renderTags()}\n      </p>\n    );\n  }\n}\n\nTags.propTypes = {\n  tags: PropTypes.arrayOf(String)\n};\n\nexport default Tags;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FaCalendarAlt } from \"react-icons/fa\";\n\nclass TimePeriod extends Component {\n  render() {\n    return (\n      <p style={{ color: \"gray\" }}>\n        <FaCalendarAlt />\n        {` ${this.props.startTime}`}\n        {this.props.endTime ? ` - ${this.props.endTime}` : \"\"}\n      </p>\n    );\n  }\n}\n\nTimePeriod.propTypes = {\n  startTime: PropTypes.string.isRequired,\n  endTime: PropTypes.string\n};\n\nexport default TimePeriod;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\nimport Description from \"./Description\";\nimport Tags from \"./Tags\";\nimport TimePeriod from \"./TimePeriod\";\n\nclass JumboListing extends Component {\n  render() {\n    const { description, tags } = this.props;\n    return (\n      <Jumbotron\n        className={\n          this.props.type === \"ShadowBox\" ? \"jumbo-shadow\" : \"jumbo-gray\"\n        }\n      >\n        <Container>\n          <h3>{this.props.title}</h3>\n          <TimePeriod\n            startTime={this.props.startTime}\n            endTime={this.props.endTime}\n          />\n          <hr />\n          <Row>\n            {this.props.gallery && (\n              <Col xs={12} md={5}>\n                {this.props.gallery}\n              </Col>\n            )}\n            <Col xs={12} md={7}>\n              <Description description={description}></Description>\n            </Col>\n          </Row>\n          <hr />\n          <Tags tags={tags}></Tags>\n          {/* <ExternalButton\n            url=\"#\"\n            text=\"Learn More\"\n            variant=\"primary\"\n          ></ExternalButton> */}\n        </Container>\n      </Jumbotron>\n    );\n  }\n}\n\nJumboListing.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.arrayOf(PropTypes.string).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  startTime: PropTypes.string.isRequired,\n  // Optional\n  gallery: PropTypes.element,\n  endTime: PropTypes.string,\n  sourceCodeUrl: PropTypes.string,\n  type: PropTypes.oneOf([\"GrayBox\", \"ShadowBox\"])\n};\n\nexport default JumboListing;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport JumboListing from \"../Components/JumboListing\";\nimport { Image } from \"react-bootstrap\";\n\nexport default class Education extends Component {\n  renderRelevantCoursework() {\n    return this.props.education.map((course, index) => {\n      return (\n        <JumboListing\n          key={`course-${index}`}\n          title={course.title}\n          description={course.description}\n          tags={course.tags}\n          sourceCodeUrl={\"https://github.com/rupaltotale\"}\n          type={\"GrayBox\"}\n          startTime={course.startTime}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <br />\n        <JumboListing\n          title={\"Second Year Computer Science Major at Cal Poly, SLO\"}\n          description={[\n            \"Junior academic standing with 4.0 major GPA and 3.98 overall GPA. Have made Dean's Honors list for all quarters attended and President's Honors list for the 2018-2019 school year\",\n            \"Active member of WISH, SWE, Hack4Impact, and Cal Poly App Development\",\n            \"Intend to minor in Data Science and Math and get a Masters in Computer Science\",\n            \"Relevant coursework discussed below\"\n          ]}\n          tags={[\"Java\", \"C\", \"Python\"]}\n          gallery={\n            <Image\n              src={\n                \"https://upload.wikimedia.org/wikipedia/en/thumb/0/0e/Cal_Poly_Mustangs_logo.svg/1200px-Cal_Poly_Mustangs_logo.svg.png\"\n              }\n              fluid\n              rounded\n            />\n          }\n          sourceCodeUrl={\"https://github.com/rupaltotale\"}\n          type={\"ShadowBox\"}\n          startTime={\"Sept 2018\"}\n          endTime={\"Present\"}\n        />\n        {this.renderRelevantCoursework()}\n        <br></br>\n      </div>\n    );\n  }\n}\n\nEducation.propTypes = {\n  education: PropTypes.array\n};\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport JumboListing from \"../Components/JumboListing\";\n\nclass Experience extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  renderExperiences() {\n    return this.props.experiences.map((experience, index) => {\n      return (\n        <JumboListing\n          key={`experience-${index}`}\n          title={experience.title}\n          description={experience.description}\n          tags={experience.tags}\n          gallery={\n            // `./${experience.gallery}.png`\n            <Image\n              style={{ padding: 10 }}\n              src={experience.gallery}\n              fluid\n              rounded\n            />\n          }\n          startTime={experience.startTime}\n          endTime={experience.endTime}\n          type={\"ShadowBox\"}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <br />\n        {this.renderExperiences()}\n      </div>\n    );\n  }\n}\n\nExperience.propTypes = {\n  experiences: PropTypes.array\n};\n\nexport default Experience;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"react-bootstrap\";\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\n\nclass ExternalButton extends Component {\n  render() {\n    const { url, text, variant } = this.props;\n    return (\n      <Button\n        variant={variant}\n        onClick={() => {\n          window.open(\n            `${url}`,\n            \"_blank\" // <- This is what makes it open in a new window.\n          );\n        }}\n      >\n        {text} <FaExternalLinkAlt />\n      </Button>\n    );\n  }\n}\n\nExternalButton.propTypes = {\n  url: PropTypes.string,\n  text: PropTypes.string,\n  variant: PropTypes.string\n};\n\nexport default ExternalButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\nimport Description from \"./Description\";\nimport Tags from \"./Tags\";\nimport ExternalButton from \"./ExternalButton\";\nimport TimePeriod from \"./TimePeriod\";\n// create a component\n\nclass CardListing extends Component {\n  render() {\n    const { description, tags } = this.props;\n    return (\n      <Card bg=\"light\">\n        <a\n          href={this.props.galleryUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Card.Img\n            variant=\"top\"\n            src={this.props.galleryUrl}\n            className={\"project-image\"}\n          />\n        </a>\n        <Card.Body>\n          <Card.Title>{this.props.title}</Card.Title>\n          <Card.Text>\n            <TimePeriod\n              startTime={this.props.startTime}\n              endTime={this.props.endTime}\n            />\n            <Description description={description}></Description>\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          {/* <small className=\"text-muted\">Last updated 3 mins ago</small> */}\n          <Tags tags={tags}></Tags>\n          {this.props.sourceCodeUrl && (\n            <ExternalButton\n              text=\"Source Code\"\n              url={this.props.sourceCodeUrl}\n              variant=\"dark\"\n            ></ExternalButton>\n          )}\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n\nCardListing.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.arrayOf(PropTypes.string).isRequired,\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  galleryUrl: PropTypes.string.isRequired,\n  startTime: PropTypes.string.isRequired,\n  // Optional\n  endTime: PropTypes.string,\n  sourceCodeUrl: PropTypes.string\n};\n//make this component available to the app\nexport default CardListing;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardDeck } from \"react-bootstrap\";\nimport CardListing from \"../Components/CardListing\";\nimport ProjectPicture from \"../Images/project.png\";\n\nexport default class Projects extends Component {\n  renderProjects() {\n    const decks = [];\n    let children = [];\n    this.props.projects.map((project, index) => {\n      children.push(\n        <CardListing\n          key={`project-${index}`}\n          title={project.title}\n          description={project.description}\n          tags={project.tags}\n          sourceCodeUrl={project.url ? project.url : null}\n          startTime={project.startTime}\n          endTime={project.endTime}\n          galleryUrl={project.gallery ? project.gallery : ProjectPicture}\n        />\n      );\n      if (index % 2) {\n        decks.push(<CardDeck style={{ margin: 20 }}>{children}</CardDeck>);\n        children = [];\n      }\n      return null;\n    });\n    decks.push(<CardDeck style={{ margin: 20 }}>{children}</CardDeck>);\n    return <div>{decks}</div>;\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <br />\n        {this.renderProjects()}\n        <br></br>\n      </div>\n    );\n  }\n}\nProjects.propTypes = {\n  projects: PropTypes.array\n};\n","import Tabletop from \"tabletop\";\n\nexport default class API {\n  constructor(firstname, lastname) {\n    this.firstname = firstname;\n    this.lastname = lastname;\n  }\n\n  getDataAsObjects(data) {\n    const dataObjects = [];\n    var item = null;\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].id !== \"\") {\n        if (item) dataObjects.push(item);\n        item = {\n          id: data[i].id,\n          title: data[i].title,\n          description: [data[i].description],\n          tags: data[i].tags.split(\",\"),\n          gallery: data[i].gallery,\n          startTime: data[i].startTime,\n          endTime: data[i].endTime !== \"\" ? data[i].endTime : null,\n          projectType: data[i].projectType,\n          url: data[i].url,\n        };\n      } else if (data[i].description !== \"\") {\n        item.description.push(data[i].description);\n        // if (experiencesData[i].tags !== '') item.tags.push(experiencesData[i].tags);\n      }\n    }\n    dataObjects.push(item);\n    return this.getSortByDate(dataObjects);\n  }\n\n  getSortByDate(dataObjects) {\n    const comparisonArray = [\n      \"Winter\",\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Spring\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Summer\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Fall\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    return dataObjects.sort((obj1, obj2) => {\n      const date1 = obj1.startTime.split(\" \");\n      const date2 = obj2.startTime.split(\" \");\n      if (date1[1] === date2[1]) {\n        return (\n          comparisonArray.indexOf(date2[0]) - comparisonArray.indexOf(date1[0])\n        );\n      }\n      return date2[1] - date1[1];\n    });\n  }\n\n  get(sheet, completion) {\n    Tabletop.init({\n      key: \"19btLS6x866LNmlm-Gud_3w_j-gAJzNFQ-tN6Uoe5iPw\",\n      simpleSheet: false,\n      callback: (data, tabletop) => {\n        // const experiencesData = tabletop.sheets(sheet).elements;\n        completion(this.getDataAsObjects(tabletop.sheets(sheet).elements));\n      }\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport { Navbar, Nav, Form, Button } from \"react-bootstrap\";\nimport Home from \"./Pages/Home\";\nimport Education from \"./Pages/Education\";\nimport Experience from \"./Pages/Experience\";\nimport Projects from \"./Pages/Projects\";\nimport API from \"./API\";\nimport Select from \"react-select\";\n\nclass App extends Component {\n  state = {\n    experiences: [],\n    education: [],\n    projects: []\n  };\n\n  componentDidMount() {\n    const api = new API();\n    api.get(\"Experiences\", experiences => {\n      console.log(experiences);\n      this.setState({ experiences });\n    });\n    api.get(\"Education\", education => {\n      console.log(education);\n      this.setState({ education });\n    });\n    api.get(\"Projects\", projects => {\n      console.log(projects);\n      this.setState({ projects });\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n          {/* <NavLink to=\"/home\"> */}\n          <Navbar.Brand href=\"/\">Rupal Totale</Navbar.Brand>\n          {/* </NavLink> */}\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <NavLink to=\"/home\">\n                <Nav.Link href=\"/home\">Home</Nav.Link>\n              </NavLink>\n              <NavLink to=\"/education\">\n                <Nav.Link href=\"/education\">Education</Nav.Link>\n              </NavLink>\n\n              <NavLink to=\"/experience\">\n                <Nav.Link href=\"/experience\">Experience</Nav.Link>\n              </NavLink>\n\n              <NavLink to=\"/projects\">\n                <Nav.Link href=\"/projects\">Projects</Nav.Link>\n              </NavLink>\n            </Nav>\n            <Form inline>\n              <Select\n                options={[\n                  {\n                    label: \"Java\",\n                    value: \"java\"\n                  },\n                  { label: \"Python\", value: \"python\" },\n                  { label: \"JavaScript\", value: \"javascript\" }\n                ]}\n                name=\"rating\"\n                styles={{\n                  container: (provided, state) => ({\n                    ...provided,\n                    width: 150,\n                    margin: 5\n                  })\n                }}\n                className=\"mr-sm-3\"\n                // isMulti\n              />\n              <Button variant=\"success\">Search</Button>\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/education\">\n            <Education education={this.state.education}></Education>\n          </Route>\n          <Route path=\"/experience\">\n            <Experience experiences={this.state.experiences} />\n          </Route>\n          <Route path=\"/projects\">\n            <Projects projects={this.state.projects} />\n          </Route>\n          <Route path=\"/home\" component={Home} />\n\n          {/* If none of the previous routes render anything,\n            this route acts as a fallback.\n\n            Important: A route with path=\"/\" will *always* match\n            the URL because all URLs begin with a /. So that's\n            why we put this one last of all */}\n          <Route path=\"/\">\n            <Redirect to=\"/home\" component={Home} />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}